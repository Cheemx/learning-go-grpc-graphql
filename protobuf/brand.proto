syntax = "proto3";
package golang_protobuf_brand;
option go_package="/golang_protobuf_brand";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

message ProtoBrandRepo {
    message ProtoBrand {
        uint64 ID = 1;
        string Name = 2 [(google.api.field_behavior) = REQUIRED, json_name = "name"];
        uint32 Year = 3 [(google.api.field_behavior) = REQUIRED, json_name = "year"];
    }
    repeated ProtoBrand brands = 1;
}

// Schema needs to be extended with Protobuf service which results in RPC generated code.
// To Use message types with an RPC system, we need to define RPC service in this file and protobuf compiler will generate service interface code in Go.

// RPC operation can only have one request parameter according to specification
// so the workaraound is necessary
message UpdateRequest {
    google.protobuf.Int64Value ID = 1;
    ProtoBrandRepo.ProtoBrand Brand = 2;
}

service CRUD {
    rpc Create(ProtoBrandRepo.ProtoBrand) returns (ProtoBrandRepo.ProtoBrand){
        option (google.api.http) = {
            post: "/api/brands"
            body: "*"
        };
    };
    rpc GetList(google.protobuf.Empty) returns (stream ProtoBrandRepo.ProtoBrand) {
        option (google.api.http) = {
            get: "/api/brands"
        };
    }; // stream means array ig
    rpc GetOne(google.protobuf.Int64Value) returns (ProtoBrandRepo.ProtoBrand){
        option (google.api.http) = {
            get: "/api/brands/{value}"
        };
    };
    rpc Update(UpdateRequest) returns (ProtoBrandRepo.ProtoBrand){
        option (google.api.http) = {
            put: "/api/brands/{ID}"
            body: "*"
        };
    };
    rpc Delete(google.protobuf.Int64Value) returns (google.protobuf.BoolValue){
        option (google.api.http) = {
            delete: "/api/brands/{value}"
        };
    };
}

// stream operator, is at runtime yielding items one after the other!
// alternative approach is to define response message type
//  which has repeated Brands field close to ProtoBrandRepo